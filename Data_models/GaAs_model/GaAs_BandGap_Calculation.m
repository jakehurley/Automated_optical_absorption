%% Optical Abosrption MATLAB code - Analysis

% clear all previous variables
clear all
clc

% figures no display in LaTeX
set(groot,'defaultAxesTickLabelInterpreter','latex');  
set(groot,'defaulttextinterpreter','latex');
set(groot,'defaultLegendInterpreter','latex');

%% loads all the data from the experiment

GaAs_Sample_Data = '/Users/harold/Library/CloudStorage/OneDrive-TheUniversityofNottingham/OceanOpticsData/Automated Data/_21.03.22  13.00.57  20 ms 40/21.03.22  13.00.57  .txt';
num = importdata(GaAs_Sample_Data);
voltages = num(:,1);
voltages = voltages(50:end);

wavelengths = num(:,2);
wavelengths = wavelengths(50:end);

std_data = num(:,3);
std_data = std_data(50:end);

m = -0.0091;
c = 18.1;
x = wavelengths;

y = m.*x + c + x;

new_wavelengths = y;

%% Experimental Data

voltages = smooth(voltages); % smooths V0 data

V_min = min(voltages).*0.9999;
voltages = voltages - abs(V_min);

x = 0.417.*10.^(-3);                               % thickness of sample
x_err = 0.001;                                     % error on thickness of sample
h = 6.62607004*10^(-34);                           % plancks constant
c = 299792458;                                     % speed of light
Joules_energy = (h*c)./(new_wavelengths.*10.^(-9));     % calculates energy in joules
eV_energy = Joules_energy./(1.602176634*10^(-19)); % converts joules to eV
% eV_energy = flip(eV_energy);

figure('name', 'voltage vs wavelength')
plot(new_wavelengths, voltages)
legend('Experimental voltage data')
xlabel('Wavelengths $(\lambda)$')
ylabel('Voltages (V)')

figure('name', 'voltage vs energy')
plot(eV_energy, voltages)
legend('Experimental voltage data')
xlabel('Energy $(eV)$')
ylabel('Voltages (V)')

%% curve fitting

%CREATEFIT(WAVELENGTHS,VOLTAGES)
%  Create a fit.
%
%  Data for 'Band_Gap' fit:
%      X Input : wavelengths
%      Y Output: voltages
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 22-Feb-2022 12:41:26


%% Fit: 'Band_Gap'.

% cut off for Line of Best Fit values
% cut1 = 490;
% cut2 = 520;

cut1 = find(new_wavelengths==895.0465);
cut2 = find(new_wavelengths==922.7917);

% cuts array at correct points
s_wavelengths = wavelengths(cut1:cut2);
s_voltages = voltages(cut1:cut2);
s_std_data = 1./std_data(cut1:cut2);

[xData, yData] = prepareCurveData(s_wavelengths, s_voltages);

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft );

% Create a figure for the plots.
figure( 'Name', 'Band_Gap_Section' );

% Plot fit with data just of Line of Best Fit
subplot( 2, 1, 1 );
h = plot( fitresult, xData, yData );
legend( h, 'voltages vs. wavelengths', 'Band_Gap', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'wavelengths');
ylabel( 'voltages', 'Interpreter', 'none' );
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult, xData, yData, 'residuals' );
legend( h, 'Band_Gap - residuals', 'Zero Line', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'wavelengths', 'Interpreter', 'none' );
ylabel( 'voltages', 'Interpreter', 'none' );
grid on

coefficients = coeffvalues(fitresult);

bandgap_wavelength = -coefficients(2)/coefficients(1);
disp(['The bandgap of GaAs is: ', num2str(bandgap_wavelength)])

x = linspace(0,1200,1200);
LOBF_y = x*coefficients(1) + coefficients(2);

% plots line of best fit -- lambda vs V 
figure( 'Name', 'Band_Gap_With_LineOfBestFit' );

plot(wavelengths, voltages);
hold on
plot(x, LOBF_y,'--');
hold on
plot(xData, yData, '*');
hold on
plot(bandgap_wavelength,0, 'm*','MarkerSize', 10);
xlabel('Wavelengths $(\lambda)$')
ylabel('Voltages (V)')
xlim([min(wavelengths) max(wavelengths)])
ylim([0 max(voltages)])
